name: Testing App Laravel 

on:  
  push:
    branches:
      [ develop ]
  pull_request:
    branches:
      [ develop ]

jobs:

  laravel-tests:
    name: Testing App Laravel 
    runs-on: ubuntu-latest
    env:
        DB_DATABASE: laravel
        DB_USERNAME: root
        DB_PASSWORD: password
        BROADCAST_DRIVER: log
        CACHE_DRIVER: redis
        QUEUE_CONNECTION: redis
        SESSION_DRIVER: redis        
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379/tcp
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: dependencies-php-8.0-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none
          tools: composer:v2

      - name: Start mysql service
        run: sudo systemctl start mysql

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-scripts  --no-progress --prefer-dist

      - name: Copy .env.example file
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate key
        run: php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear        

      - name: Run Migrations
        run: |
          php artisan migrate --seed
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

      - name: Install front-end dependencies
        run: |
          npm install
          npm run dev

      - name: Run tests
        run: php artisan test
        env:
          APP_ENV: testing
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

      - name: Psalm – Static Analysis for PHP
        # You may pin to the exact commit or the version.
        # uses: psalm/psalm-github-actions@2e545d38ff4387b370449e2673088cc8dc40cf1d
        uses: psalm/psalm-github-actions@1.1.2
        with:
          # Whether or not to use Psalm’s security analysis
          security_analysis: # optional
          # File for Psalm’s output
          report_file: # optional, default is 
          # Whether or not Composer installs dev packages
          composer_require_dev: # optional
          # Whether or not the --ignore-platform-reqs flag is passed to Composer
          composer_ignore_platform_reqs: # optional


      - name: Upload artifacts
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: Logs
          path: ./storage/logs